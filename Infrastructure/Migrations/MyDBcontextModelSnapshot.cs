// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MyDBcontext))]
    partial class MyDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.DTO.Functions.FuncAvgCheckDto", b =>
                {
                    b.Property<decimal>("avg_check")
                        .HasColumnType("numeric");

                    b.Property<int>("hour")
                        .HasColumnType("integer");

                    b.ToTable("ReportResultsAvg");
                });

            modelBuilder.Entity("Core.DTO.Functions.FuncSumOnBirthDayDto", b =>
                {
                    b.Property<int>("client_id")
                        .HasColumnType("integer");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("second_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("total_sum")
                        .HasColumnType("numeric");

                    b.ToTable("ReportResultsSum");
                });

            modelBuilder.Entity("Core.Models.Client", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateTime>("birth_date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<string>("second_name")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.HasKey("id");

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("Core.Models.Order", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("client_id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("order_datetime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.HasIndex("client_id");

                    b.ToTable("orders", null, t =>
                        {
                            t.HasCheckConstraint("CK_orders_status_valid", "status IN ('notprocessed', 'completed', 'cancelled')");
                        });
                });

            modelBuilder.Entity("Core.Models.Order", b =>
                {
                    b.HasOne("Core.Models.Client", "client")
                        .WithMany()
                        .HasForeignKey("client_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");
                });
#pragma warning restore 612, 618
        }
    }
}
